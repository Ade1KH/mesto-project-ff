{"version":3,"file":"main.js","mappings":"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","sources":["webpack://mesto-project-ff/./src/components/card.js","webpack://mesto-project-ff/./src/components/modal.js","webpack://mesto-project-ff/./src/components/validation.js","webpack://mesto-project-ff/./src/components/api.js","webpack://mesto-project-ff/./src/index.js"],"sourcesContent":["//фнкция создания карточки\nfunction createCard(cardData, toogleLikeCard, zoomImage, deleteModal, currentUserId) {\n  const cardTemplate = document.querySelector(\"#card-template\").content;\n  const cardElement = cardTemplate.querySelector(\".card\").cloneNode(true);\n  const cardImage = cardElement.querySelector(\".card__image\");\n  const cardTitle = cardElement.querySelector(\".card__title\");\n\n  const deleteButton = cardElement.querySelector(\".card__delete-button\");\n  const cardLikeButton = cardElement.querySelector(\".card__like-button\");\n\n  const cardLikes = cardElement.querySelector(\".card__likes-counter\");\n  const isLikedByCurrentUser = cardData.likes.some(card => card._id === currentUserId)\n\n  cardImage.src = cardData.link;\n  cardImage.alt = cardData.name;\n  cardTitle.textContent = cardData.name;\n  cardLikes.textContent = cardData.likes.length;\n\n  cardLikeButton.addEventListener('click', () => {\n    const isCardLiked = cardLikeButton.classList.contains('card__like-button_is-active');\n\n    toogleLikeCard(cardData._id, isCardLiked)\n    .then(updatedCard => {\n        cardLikeButton.classList.toggle('card__like-button_is-active')\n        cardLikes.textContent = updatedCard.likes.length;\n\n        if (cardLikes.textContent < 1) {\n          cardLikes.add('display-disabled')\n      } else {\n        cardLikes.remove('display-disabled')\n      }\n    })\n    .catch(err => console.error(`Ошибка: ${err}`))\n})\n\ncardImage.addEventListener('click', () => {\n    zoomImage(cardData.name, cardData.link)\n})\n\ndeleteButton.addEventListener('click', () => {\n  deleteModal(cardData._id, cardElement)\n})\n\nif (currentUserId !== cardData.owner._id) {\n  deleteButton.classList.add('display-disabled')\n}\n\nif (isLikedByCurrentUser) {\n  cardLikeButton.classList.add('card__like-button_is-active')\n}\n\nif (cardData.likes.length === 0) {\n  cardLikes.classList.add('display-disabled')\n\n} else {\n  cardLikes.classList.remove('display-disabled')\n}\n\nreturn cardElement;\n}\n\nconst deleteCard = (cardElement) => {\n  cardElement.remove();\n};\n\nexport { createCard, deleteCard};","//функция открытие поп-ап\n\nfunction openModal (popUp) {\n  popUp.classList.add('popup_is-opened');\n  document.addEventListener('keydown', EscModal);\n  popUp.addEventListener('mousedown', closeOverlay)\n}\n\n//функция закрытия поп-ап\n  \nfunction closeModal (element) {\n  element.classList.remove('popup_is-opened');\n  document.removeEventListener('keydown', EscModal);\n  element.removeEventListener('mousedown', closeOverlay)\n}\n\nfunction closeOverlay(e) {\n  if (e.target === e.currentTarget) {\n      closeModal(e.currentTarget)\n  }\n};\n\nfunction EscModal(evt) {\n  if (evt.key === 'Escape') {\n      closeModal(document.querySelector('.popup_is-opened'))\n  }\n};\n\nexport {openModal, closeModal, closeOverlay, EscModal};","\n\n// Валидация всех форм\nfunction enableValidation(config) {\n  const forms = document.querySelectorAll(config.formSelector);\n\n  forms.forEach(formElement => {\n      const inputs = formElement.querySelectorAll(config.inputSelector);\n      const submitButton = formElement.querySelector(config.submitButtonSelector);\n\n      inputs.forEach(inputElement => {\n          inputElement.addEventListener('input', () => {\n              isInputValid(formElement, inputElement, config.inputErrorClass, config.errorClass);\n              toggleSubmitButton(inputs, submitButton, config.inactiveButtonClass);\n          })\n      })\n\n      toggleSubmitButton(inputs, submitButton, config.inactiveButtonClass);\n  })\n}\n\n// Проверка валидности полей формы\nfunction isInputValid(formElement, inputElement, inputErrorClass, errorClass) {\n  const errorItem = formElement.querySelector(`.${inputElement.id}-error`)\n  const customErrorMessage = inputElement.dataset.errorMessage\n\n  if (inputElement.validity.patternMismatch) {\n      inputElement.setCustomValidity(customErrorMessage);\n  } else {\n      inputElement.setCustomValidity('');\n  }\n\n  if (!inputElement.validity.valid) {\n      showError(inputElement, errorItem, inputErrorClass, errorClass);\n  } else {\n      hideError(inputElement, errorItem, inputErrorClass, errorClass);\n  }\n}\n\n// Переключение состояния кнопки при валидации\nfunction toggleSubmitButton(inputs, submitButton, inactiveButtonClass) {\n  const hasInvalidInput = Array.from(inputs).some(inputElement => !inputElement.validity.valid);\n\n  if (hasInvalidInput) {\n      submitButton.classList.add(inactiveButtonClass);\n      submitButton.disabled = true;\n  } else {\n      submitButton.classList.remove(inactiveButtonClass);\n      submitButton.disabled = false;\n  }\n}\n\n// Очистка сообщений об ошибках\nfunction clearValidation(formElement, config) {\n  const inputs = formElement.querySelectorAll(config.inputSelector);\n  const submitButton = formElement.querySelector(config.submitButtonSelector);\n\n  inputs.forEach(inputElement => {\n      const errorItem = formElement.querySelector(`.${inputElement.id}-error`);\n\n      inputElement.setCustomValidity('');\n      hideError(inputElement, errorItem, config.inputErrorClass, config.errorClass);\n  })\n  toggleSubmitButton(inputs, submitButton, config.inactiveButtonClass)\n}\n\n// ошибки\nfunction showError(inputElement, errorItem, inputErrorClass, errorClass) {\n  inputElement.classList.add(inputErrorClass);\n  errorItem.classList.add(errorClass);\n  errorItem.textContent = inputElement.validationMessage;\n}\n\nfunction hideError(inputElement, errorItem, inputErrorClass, errorClass) {\n  inputElement.classList.remove(inputErrorClass);\n  errorItem.classList.remove(errorClass);\n  errorItem.textContent = ''\n}\n\nexport { enableValidation, clearValidation }","//запрос к серверу\n\nconst setting = {\n  url: 'https://nomoreparties.co/v1/wff-cohort-35',\n    headers: {\n        authorization: '4e38c99a-8169-4639-87e7-5f0603bdda81',\n        'Content-Type': 'application/json',\n  }\n}\n\nconst responseAuthorization = (res) => res.ok? res.json() : Promise.reject(`Что-то пошло не так: ${res.status}`);\n\n//метод head\n//аватар\n\nconst checkLink = (link) => {\n  return fetch(link, {\n      method: 'HEAD',\n  })\n  .then(res => {\n      const linkType = res.headers.get('Content-Type')\n      if (res.ok && linkType && linkType.startsWith('image/')) {\n          return true\n      } else {\n          return false\n      }\n  })\n  .catch(err => console.error(`Ошибка проверки ссылки: ${err}`))\n}\n\n//гет запросы\n//карточки\n\nconst getUserCards = () => {\n  return fetch(`${setting.url}/cards`, {\n      headers: setting.headers\n  })\n  .then(responseAuthorization)\n}\n\n//профиль\n\nconst getUserProfile = () => {\n  return fetch(`${setting.url}/users/me`, {\n      headers: setting.headers\n  })\n  .then(responseAuthorization)\n}\n\n//метод patch\n//аватар\n\nconst EditProfileImage = (newAvatarLoad) => {\n  return fetch(`${setting.url}/users/me/avatar`, {\n    headers: setting.headers,\n    method: \"PATCH\",\n    body: JSON.stringify(newAvatarLoad)\n  })\n  .then(responseAuthorization);\n}\n\n//редактирование профиля\n\nconst patchUserProfile = (newProfile) => {\n  return fetch(`${setting.url}/users/me`, {\n    headers: setting.headers,\n    method: \"PATCH\",\n    body: JSON.stringify(newProfile)\n  })\n  .then(responseAuthorization)\n}\n\n//метод post\n//карточка\nconst postNewCard = (newCardData) => {\n  return fetch(`${setting.url}/cards`, {\n      method: 'POST',\n      headers: setting.headers,\n      body: JSON.stringify(newCardData)\n  })\n  .then(responseAuthorization)\n}\n\n//метод delete\n//карточка\nconst deleteCardId = (cardId) => {\n  return fetch(`${setting.url}/cards/${cardId}`, {\n      method: 'DELETE',\n      headers: setting.headers,\n  })\n  .then(responseAuthorization)\n}\n\n//лайк\nconst toogleLikeCard = (cardId, likeStatus) => {\n  const variableMethod = likeStatus ? 'DELETE' : 'PUT'\n\n  return fetch(`${setting.url}/cards/likes/${cardId}`, {\n      method: variableMethod,\n      headers: setting.headers,\n  })\n  .then(responseAuthorization)\n}\n\nexport {checkLink, getUserCards, getUserProfile, EditProfileImage, patchUserProfile, postNewCard, deleteCardId, toogleLikeCard}\n\n\n","\nimport './pages/index.css';\n// import { initialCards } from './components/cards.js';\nimport { createCard, deleteCard} from './components/card.js';\nimport { openModal, closeModal} from './components/modal.js';\nimport { enableValidation, clearValidation } from './components/validation.js';\nimport {checkLink, getUserCards, getUserProfile, EditProfileImage, patchUserProfile, postNewCard, deleteCardId, toogleLikeCard} from './components/api.js';\n\n//DOM узлы\nconst placesList = document.querySelector('.places__list');\nconst profilePopUp = document.querySelector('.popup_type_edit');\nconst profileActive = document.querySelector('.profile__edit-button');\nconst popUpClose = document.querySelector('.popup__close');\nconst profileForm =  document.forms['edit-profile'];\nconst nameInput = document.querySelector('.popup__input_type_name');\nconst jobInput = document.querySelector('.popup__input_type_description');\nconst profileName = document.querySelector('.profile__title');\nconst profileDescription = document.querySelector('.profile__description');\nconst profileImage = document.querySelector('.profile__image');\n\nconst profileEditAvatarForm = document.forms['new-avatar'];\nconst profileEditAvatarInput = profileEditAvatarForm.querySelector('.popup__input_type_url');\nconst profileEditAvatarPopUp = document.querySelector('.popup_type_new-avatar');\n\nconst buttonAddCard = document.querySelector('.profile__add-button');\nconst cardContent = document.querySelector('.popup_type_new-card');\nconst closeCardSection = cardContent.querySelector('.popup__close');\nconst popUpImg = document.querySelector('.popup_type_image');\nconst closeImg = popUpImg.querySelector('.popup__close');\nconst imageCard = popUpImg.querySelector('.popup__image');\nconst imageCaption = popUpImg.querySelector('.popup__caption');\nconst popUpButton = document.querySelectorAll('.popup');\nconst confirmDeleteForm = document.forms['confirm-delete'];\nconst confirmDeletePopUp = document.querySelector('.popup_type_delete-card');\n\n//добавление карточек\n\nconst newPlaseForm = document.forms['new-place']\nconst plaseName = document.querySelector('.popup__input_type_card-name');\nconst plaseUrl = document.querySelector('.popup__input_type_url');\nconst imageName = document.querySelector('.popup__caption');\nconst imageUrl = document.querySelector('.popup__image');\nconst saveCard = newPlaseForm.querySelector('.popup__button');\n\n//конфигурация валидации\nconst validationConfig = {\n  formSelector: '.popup__form',\n  inputSelector: '.popup__input',\n  submitButtonSelector: '.popup__button',\n  inactiveButtonClass: 'popup__button_disabled',\n  inputErrorClass: 'popup__input_type_error',\n  errorClass: 'popup__error_visible',\n}\n\n//Карточка удаления\nconst cardForDelete = {\n  cardId: '',\n  cardElement: null,\n}\n\n// загрузка страницы\nfunction initializePage (getUserCards, getUserProfile) {\n  Promise.all([getUserCards(), getUserProfile()])\n  .then(([cards, userData]) => {\n      cards.forEach(cardData => {\n        placesList.append(createCard(cardData, toogleLikeCard, zoomImage, deleteModal, userData._id))\n      })\n      updateProfile(userData)\n  })\n  .catch(err => console.error(`Ошибка: ${err}`))\n  }\n\n  //профиль\n  function inputEditProfile () {\n    nameInput.value = profileName.textContent;\n    jobInput.value = profileDescription.textContent;\n  }\n\n  // апдейт профиля\n  function updateProfile(profileData) {\n    profileName.textContent = profileData.name\n    profileDescription.textContent = profileData.about\n    profileImage.style.backgroundImage = `url(${profileData.avatar})`\n  }\n\n//отправка формы профиля\nfunction handleEditProfile(evt) {\n  evt.preventDefault()\n  const newProfile = {\n      name: nameInput.value,\n      about: jobInput.value, \n  }\n  patchUserProfile(newProfile)\n  .then(newProfile => {\n    profileName.textContent = newProfile.name\n    profileDescription.textContent = newProfile.about\n    closeModal(profilePopUp);\n      \n  })\n  .catch(err => console.error(`Ошибка ${err}`))\n}\n\n// аватар\nprofileImage.addEventListener('click', () => {\n  profileEditAvatarInput.value = ''\n  openModal(profileEditAvatarPopUp);\n  clearValidation(profileEditAvatarForm, validationConfig);\n  profileEditAvatarInput.focus()\n})\n\n//отправка аватара\nfunction handleAvatarFormSubmit(evt) {\n  evt.preventDefault()\n  const newAvatarLoad = {avatar: profileEditAvatarInput.value}\n  const errorItem = profileEditAvatarForm.querySelector(`.${profileEditAvatarInput.id}-error`)\n  checkLink(profileEditAvatarInput.value)\n  .then(res => {\n      if (res) {\n        EditProfileImage(newAvatarLoad)\n          .then(profileData => {\n              profileImage.style.backgroundImage = `url(${profileData.avatar})`;\n              closeModal(profileEditAvatarPopUp);\n              profileEditAvatarInput.classList.remove(validationConfig.inputErrorClass);\n              errorItem.classList.remove(validationConfig.errorClass);\n          })\n      } else {\n          throw new Error('Ссылка не ведет на изображение')\n      }\n  })\n  .catch(err => {\n      console.error(`Ошибка проверки ссылки аватара: ${err}`)\n      profileEditAvatarInput.classList.add(validationConfig.inputErrorClass);\n      errorItem.classList.add(validationConfig.errorClass);\n      errorItem.textContent = 'Ошибка ввода';\n  })\n}\n\n//новая карточка\nfunction newCardSubmit(evt) {\n  evt.preventDefault()\n  const newCard = {\n      name: plaseName.value,\n      link: plaseUrl.value,\n  }\n  postNewCard(newCard)\n  .then(newCardData => {\n    placesList.prepend(createCard(newCardData, toogleLikeCard, zoomImage,deleteModal, newCardData.owner._id))\n    newPlaseForm.reset()\n    closeModal(cardContent)\n  })\n  .catch(err => console.error(`Ошибка: ${err}`))\n}\n\n//удаление карты \nfunction handleDeleteForm(evt) {\n  evt.preventDefault()\n  deleteCardId(cardForDelete.cardId)\n  .then(() => {\n      deleteCard(cardForDelete.cardElement)\n      closeModal(confirmDeletePopUp)\n  })\n  .catch(err => console.error(\"Ошибка:\", err))\n}\n\n\n//zoom image\n\nfunction zoomImage (name, link) {\n  openModal(popUpImg);\n  imageCard.src = link;\n  imageCard.alt = name;\n  imageCaption.textContent = name;\n}\n\n// //модал удаление карточки\nfunction deleteModal(cardId, cardElement) {\n  cardForDelete.cardId = cardId;\n  cardForDelete.cardElement = cardElement;\n\n  openModal(confirmDeletePopUp)\n\n  confirmDeleteForm.elements['delete-button'].focus()\n}\n\n//листнеры\n  // buttonAddCard.addEventListener('click', () => openModal(cardContent));\nprofileForm.addEventListener('submit', handleEditProfile); \n\nbuttonAddCard.addEventListener('click', () => {\n  plaseName.value = ''\n  plaseUrl.value = ''\n  openModal(cardContent)\n  clearValidation(newPlaseForm, validationConfig)\n\n  plaseName.focus()\n})\n\nnewPlaseForm.addEventListener('submit', newCardSubmit);\n\nconfirmDeleteForm.addEventListener('submit', handleDeleteForm);\n\npopUpClose.addEventListener('click', () => closeModal(profilePopUp));\nprofileActive.addEventListener('click', function () {\n    openModal(profilePopUp);\n    inputEditProfile();\n    clearValidation(profileForm, validationConfig)\n  });\n\nprofileEditAvatarForm.addEventListener('submit', handleAvatarFormSubmit)\n\n//анимация \npopUpButton.forEach(function (element) {\n  element.classList.add('popup_is-animated')\n});\n\n//закрытие всех окон\ndocument.querySelectorAll('.popup__close').forEach(button => {\n  const buttonsPopup = button.closest('.popup'); \n  button.addEventListener('click', () => closeModal(buttonsPopup)); \n}); \n\n\ninitializePage (getUserCards, getUserProfile);\nenableValidation(validationConfig);"],"names":["createCard","cardData","toogleLikeCard","zoomImage","deleteModal","currentUserId","cardElement","document","querySelector","content","cloneNode","cardImage","cardTitle","deleteButton","cardLikeButton","cardLikes","isLikedByCurrentUser","likes","some","card","_id","src","link","alt","name","textContent","length","addEventListener","isCardLiked","classList","contains","then","updatedCard","toggle","add","remove","catch","err","console","error","concat","owner","openModal","popUp","EscModal","closeOverlay","closeModal","element","removeEventListener","e","target","currentTarget","evt","key","toggleSubmitButton","inputs","submitButton","inactiveButtonClass","Array","from","inputElement","validity","valid","disabled","clearValidation","formElement","config","querySelectorAll","inputSelector","submitButtonSelector","forEach","errorItem","id","setCustomValidity","hideError","inputErrorClass","errorClass","setting","url","headers","authorization","responseAuthorization","res","ok","json","Promise","reject","status","cardId","likeStatus","variableMethod","fetch","method","placesList","profilePopUp","profileActive","popUpClose","profileForm","forms","nameInput","jobInput","profileName","profileDescription","profileImage","profileEditAvatarForm","profileEditAvatarInput","profileEditAvatarPopUp","buttonAddCard","cardContent","popUpImg","imageCard","imageCaption","popUpButton","confirmDeleteForm","confirmDeletePopUp","newPlaseForm","plaseName","plaseUrl","validationConfig","formSelector","cardForDelete","elements","focus","value","newProfile","preventDefault","about","body","JSON","stringify","newCardData","prepend","reset","newAvatarLoad","avatar","linkType","get","startsWith","Error","EditProfileImage","profileData","style","backgroundImage","button","buttonsPopup","closest","all","_ref","_ref2","cards","userData","append","customErrorMessage","dataset","errorMessage","patternMismatch","validationMessage","showError","isInputValid"],"sourceRoot":""}