{"version":3,"file":"main.js","mappings":"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","sources":["webpack://mesto-project-ff/./src/components/card.js","webpack://mesto-project-ff/./src/components/modal.js","webpack://mesto-project-ff/./src/components/validation.js","webpack://mesto-project-ff/./src/components/api.js","webpack://mesto-project-ff/./src/index.js"],"sourcesContent":["//создание карточки\nfunction createCard(cardData, toogleLikeCard, zoomImage, deleteModal, currentUserId) {\n  const cardTemplate = document.querySelector('#card-template').content\n  const card = cardTemplate.querySelector('.card').cloneNode(true)\n  const cardImage = card.querySelector('.card__image')\n  const cardTitle = card.querySelector('.card__title')\n\n  const cardDeleteButton = card.querySelector('.card__delete-button')\n  const cardLikeButton = card.querySelector('.card__like-button')\n\n  const cardLikesCounterElement = card.querySelector('.card__likes-counter')\n  const isLikedByCurrentUser = cardData.likes.some(card => card._id === currentUserId)\n\n  cardImage.src = cardData.link\n  cardImage.alt = cardData.name\n  cardTitle.textContent = cardData.name\n  cardLikesCounterElement.textContent = cardData.likes.length\n\n\n//слушатели\n  cardLikeButton.addEventListener('click', () => {\n      const isCardLiked = cardLikeButton.classList.contains('card__like-button_is-active')\n\n      toogleLikeCard(cardData._id, isCardLiked)\n      .then(updatedCard => {\n          cardLikeButton.classList.toggle('card__like-button_is-active')\n          cardLikesCounterElement.textContent = updatedCard.likes.length\n\n          if (cardLikesCounterElement.textContent < 1) {\n              cardLikesCounterElement.classList.add('display-disabled')\n          } else {\n              cardLikesCounterElement.classList.remove('display-disabled')\n          }\n      })\n      .catch(err => console.error(`Упс, лайкнуть не удалось: ${err}`))\n  })\n\n  cardImage.addEventListener('click', () => {\n      zoomImage(cardData.name, cardData.link)\n  })\n\n  cardDeleteButton.addEventListener('click', () => {\n      deleteModal(cardData._id, card)\n  })\n\n\n  if (currentUserId !== cardData.owner._id) {\n      cardDeleteButton.classList.add('display-disabled')\n  }\n\n  if (isLikedByCurrentUser) {\n      cardLikeButton.classList.add('card__like-button_is-active')\n  }\n\n  if (cardData.likes.length === 0) {\n      cardLikesCounterElement.classList.add('display-disabled')\n\n  } else {\n      cardLikesCounterElement.classList.remove('display-disabled')\n  }\n\n\n  return card\n}\n\n//удаление карточек\nconst deleteCard = (cardElement) => {\n  cardElement.remove();\n};\n\nexport { createCard, deleteCard };","//функция открытие поп-ап\n\nfunction openModal(popUp) {\n  popUp.classList.add(\"popup_is-opened\");\n  document.addEventListener(\"keydown\", EscModal);\n  popUp.addEventListener(\"mousedown\", closeOverlay);\n}\n\n//функция закрытия поп-ап\n\nfunction closeModal(element) {\n  element.classList.remove(\"popup_is-opened\");\n  document.removeEventListener(\"keydown\", EscModal);\n  element.removeEventListener(\"mousedown\", closeOverlay);\n}\n\nfunction closeOverlay(e) {\n  if (e.target === e.currentTarget) {\n      closeModal(e.currentTarget);\n  }\n}\n\nfunction EscModal(evt) {\n  if (evt.key === \"Escape\") {\n      closeModal(document.querySelector(\".popup_is-opened\"));\n  }\n}\n\nexport { openModal, closeModal, closeOverlay, EscModal };\n","// Валидация всех форм\nfunction enableValidation(config) {\n  const forms = document.querySelectorAll(config.formSelector);\n\n  forms.forEach((formElement) => {\n      const inputs = formElement.querySelectorAll(config.inputSelector);\n      const submitButton = formElement.querySelector(config.submitButtonSelector);\n\n      inputs.forEach((inputElement) => {\n          inputElement.addEventListener(\"input\", () => {\n              isInputValid(formElement, inputElement, config.inputErrorClass, config.errorClass);\n              toggleSubmitButton(inputs, submitButton, config.inactiveButtonClass);\n          });\n      });\n\n      toggleSubmitButton(inputs, submitButton, config.inactiveButtonClass);\n  });\n}\n\n// Проверка валидности полей формы\nfunction isInputValid(formElement, inputElement, inputErrorClass, errorClass) {\n  const errorItem = formElement.querySelector(`.${inputElement.id}-error`);\n  const customErrorMessage = inputElement.dataset.errorMessage;\n\n  if (inputElement.validity.patternMismatch) {\n      inputElement.setCustomValidity(customErrorMessage);\n  } else {\n      inputElement.setCustomValidity(\"\");\n  }\n\n  if (!inputElement.validity.valid) {\n      showError(inputElement, errorItem, inputErrorClass, errorClass);\n  } else {\n      hideError(inputElement, errorItem, inputErrorClass, errorClass);\n  }\n}\n\n// Переключение состояния кнопки при валидации\nfunction toggleSubmitButton(inputs, submitButton, inactiveButtonClass) {\n  const hasInvalidInput = Array.from(inputs).some((inputElement) => !inputElement.validity.valid);\n\n  if (hasInvalidInput) {\n      submitButton.classList.add(inactiveButtonClass);\n      submitButton.disabled = true;\n  } else {\n      submitButton.classList.remove(inactiveButtonClass);\n      submitButton.disabled = false;\n  }\n}\n\n// Очистка сообщений об ошибках\nfunction clearValidation(formElement, config) {\n  const inputs = formElement.querySelectorAll(config.inputSelector);\n  const submitButton = formElement.querySelector(config.submitButtonSelector);\n\n  inputs.forEach((inputElement) => {\n      const errorItem = formElement.querySelector(`.${inputElement.id}-error`);\n\n      inputElement.setCustomValidity(\"\");\n      hideError(inputElement, errorItem, config.inputErrorClass, config.errorClass);\n  });\n  toggleSubmitButton(inputs, submitButton, config.inactiveButtonClass);\n}\n\n// ошибки\nfunction showError(inputElement, errorItem, inputErrorClass, errorClass) {\n  inputElement.classList.add(inputErrorClass);\n  errorItem.classList.add(errorClass);\n  errorItem.textContent = inputElement.validationMessage;\n}\n\nfunction hideError(inputElement, errorItem, inputErrorClass, errorClass) {\n  inputElement.classList.remove(inputErrorClass);\n  errorItem.classList.remove(errorClass);\n  errorItem.textContent = \"\";\n}\n\nexport { enableValidation, clearValidation };\n","//запрос к серверу\n\nconst setting = {\n  url: \"https://nomoreparties.co/v1/wff-cohort-35\",\n  headers: {\n      authorization: \"4e38c99a-8169-4639-87e7-5f0603bdda81\",\n      \"Content-Type\": \"application/json\",\n  },\n};\n\nconst responseAuthorization = (res) => (res.ok ? res.json() : Promise.reject(`Что-то пошло не так: ${res.status}`));\n\n//метод head\n//аватар\n\nconst checkLink = (link) => {\n  return fetch(link, {\n      method: \"HEAD\",\n  })\n      .then((res) => {\n          const linkType = res.headers.get(\"Content-Type\");\n          if (res.ok && linkType && linkType.startsWith(\"image/\")) {\n              return true;\n          } else {\n              return false;\n          }\n      })\n      .catch((err) => console.error(`Ошибка проверки ссылки: ${err}`));\n};\n\n//гет запросы\n//карточки\n\nconst getUserCards = () => {\n  return fetch(`${setting.url}/cards`, {\n      headers: setting.headers,\n  }).then(responseAuthorization);\n};\n\n//профиль\n\nconst getUserProfile = () => {\n  return fetch(`${setting.url}/users/me`, {\n      headers: setting.headers,\n  }).then(responseAuthorization);\n};\n\n//метод patch\n//аватар\n\nconst editProfileImage = (newAvatarLoad) => {\n  return fetch(`${setting.url}/users/me/avatar`, {\n      headers: setting.headers,\n      method: \"PATCH\",\n      body: JSON.stringify(newAvatarLoad),\n  }).then(responseAuthorization);\n};\n\n//редактирование профиля\n\nconst patchUserProfile = (newProfile) => {\n  return fetch(`${setting.url}/users/me`, {\n      headers: setting.headers,\n      method: \"PATCH\",\n      body: JSON.stringify(newProfile),\n  }).then(responseAuthorization);\n};\n\n//метод post\n//карточка\nconst postNewCard = (newCardData) => {\n  return fetch(`${setting.url}/cards`, {\n      method: \"POST\",\n      headers: setting.headers,\n      body: JSON.stringify(newCardData),\n  }).then(responseAuthorization);\n};\n\n//метод delete\n//карточка\nconst deleteCardId = (cardId) => {\n  return fetch(`${setting.url}/cards/${cardId}`, {\n      method: \"DELETE\",\n      headers: setting.headers,\n  }).then(responseAuthorization);\n};\n\n//лайк\nconst toogleLikeCard = (cardId, likeStatus) => {\n  const variableMethod = likeStatus ? \"DELETE\" : \"PUT\";\n\n  return fetch(`${setting.url}/cards/likes/${cardId}`, {\n      method: variableMethod,\n      headers: setting.headers,\n  }).then(responseAuthorization);\n};\n\nexport { checkLink, getUserCards, getUserProfile, editProfileImage, patchUserProfile, postNewCard, deleteCardId, toogleLikeCard };\n","import \"./pages/index.css\";\n// import { initialCards } from './components/cards.js';\nimport { createCard, deleteCard } from \"./components/card.js\";\nimport { openModal, closeModal } from \"./components/modal.js\";\nimport { enableValidation, clearValidation } from \"./components/validation.js\";\nimport { checkLink, getUserCards, getUserProfile, editProfileImage, patchUserProfile, postNewCard, deleteCardId, toogleLikeCard } from \"./components/api.js\";\n\n//DOM узлы\nconst placesList = document.querySelector(\".places__list\");\nconst profilePopUp = document.querySelector(\".popup_type_edit\");\nconst profileActive = document.querySelector(\".profile__edit-button\");\nconst popUpClose = document.querySelector(\".popup__close\");\nconst profileForm = document.forms[\"edit-profile\"];\nconst nameInput = document.querySelector(\".popup__input_type_name\");\nconst jobInput = document.querySelector(\".popup__input_type_description\");\nconst profileName = document.querySelector(\".profile__title\");\nconst profileDescription = document.querySelector(\".profile__description\");\nconst profileImage = document.querySelector(\".profile__image\");\n\nconst profileEditAvatarForm = document.forms[\"new-avatar\"];\nconst profileEditAvatarInput = profileEditAvatarForm.querySelector(\".popup__input_type_url\");\nconst profileEditAvatarPopUp = document.querySelector(\".popup_type_new-avatar\");\n\nconst buttonAddCard = document.querySelector(\".profile__add-button\");\nconst cardContent = document.querySelector(\".popup_type_new-card\");\nconst closeCardSection = cardContent.querySelector(\".popup__close\");\nconst popUpImg = document.querySelector(\".popup_type_image\");\nconst closeImg = popUpImg.querySelector(\".popup__close\");\nconst imageCard = popUpImg.querySelector(\".popup__image\");\nconst imageCaption = popUpImg.querySelector(\".popup__caption\");\nconst popUpList = document.querySelectorAll(\".popup\");\nconst confirmDeleteForm = document.forms[\"confirm-delete\"];\nconst confirmDeletePopUp = document.querySelector(\".popup_type_delete-card\");\n\n//добавление карточек\n\nconst newPlaseForm = document.forms[\"new-place\"];\nconst placeName = document.querySelector(\".popup__input_type_card-name\");\nconst placeUrl = document.querySelector(\".popup__input_type_url\");\nconst imageName = document.querySelector(\".popup__caption\");\nconst imageUrl = document.querySelector(\".popup__image\");\nconst saveCard = newPlaseForm.querySelector(\".popup__button\");\n\n//конфигурация валидации\nconst validationConfig = {\n    formSelector: \".popup__form\",\n    inputSelector: \".popup__input\",\n    submitButtonSelector: \".popup__button\",\n    inactiveButtonClass: \"popup__button_disabled\",\n    inputErrorClass: \"popup__input_type_error\",\n    errorClass: \"popup__error_visible\",\n};\n\n//Карточка удаления\nconst cardForDelete = {\n    cardId: \"\",\n    cardElement: null,\n};\n\n// загрузка страницы\nfunction initializePage(getUserCards, getUserProfile) {\n    Promise.all([getUserCards(), getUserProfile()])\n        .then(([cards, userData]) => {\n            cards.forEach((cardData) => {\n                placesList.append(createCard(cardData, toogleLikeCard, zoomImage, deleteModal, userData._id));\n            });\n            updateProfile(userData);\n        })\n        .catch((err) => console.error(`Ошибка: ${err}`));\n}\n\n//профиль\nfunction inputEditProfile() {\n    nameInput.value = profileName.textContent;\n    jobInput.value = profileDescription.textContent;\n}\n\n// апдейт профиля\nfunction updateProfile(profileData) {\n    profileName.textContent = profileData.name;\n    profileDescription.textContent = profileData.about;\n    profileImage.style.backgroundImage = `url(${profileData.avatar})`;\n}\n\n//отправка формы профиля\nfunction handleEditProfile(evt) {\n    evt.preventDefault();\n    const newProfile = {\n        name: nameInput.value,\n        about: jobInput.value,\n    };\n    patchUserProfile(newProfile)\n        .then((newProfile) => {\n            profileName.textContent = newProfile.name;\n            profileDescription.textContent = newProfile.about;\n            closeModal(profilePopUp);\n        })\n        .catch((err) => console.error(`Ошибка ${err}`));\n}\n\n// аватар\nprofileImage.addEventListener(\"click\", () => {\n    profileEditAvatarForm.reset();\n    openModal(profileEditAvatarPopUp);\n    clearValidation(profileEditAvatarForm, validationConfig);\n    profileEditAvatarInput.focus();\n});\n\n//отправка аватара\nfunction handleAvatarFormSubmit(evt) {\n    evt.preventDefault();\n    const newAvatarLoad = { avatar: profileEditAvatarInput.value };\n    const errorItem = profileEditAvatarForm.querySelector(`.${profileEditAvatarInput.id}-error`);\n    checkLink(profileEditAvatarInput.value)\n        .then((res) => {\n            if (res) {\n                editProfileImage(newAvatarLoad).then((profileData) => {\n                    profileImage.style.backgroundImage = `url(${profileData.avatar})`;\n                    closeModal(profileEditAvatarPopUp);\n                    profileEditAvatarInput.classList.remove(validationConfig.inputErrorClass);\n                    errorItem.classList.remove(validationConfig.errorClass);\n                });\n            } else {\n                throw new Error(\"Ссылка не ведет на изображение\");\n            }\n        })\n        .catch((err) => {\n            console.error(`Ошибка проверки ссылки аватара: ${err}`);\n            profileEditAvatarInput.classList.add(validationConfig.inputErrorClass);\n            errorItem.classList.add(validationConfig.errorClass);\n            errorItem.textContent = \"Ошибка ввода\";\n        });\n}\n\n//новая карточка\nfunction newCardSubmit(evt) {\n    evt.preventDefault();\n    const newCard = {\n        name: placeName.value,\n        link: placeUrl.value,\n    };\n    postNewCard(newCard)\n        .then((newCardData) => {\n            placesList.prepend(createCard(newCardData, toogleLikeCard, zoomImage, deleteModal, newCardData.owner._id));\n            newPlaseForm.reset();\n            closeModal(cardContent);\n        })\n        .catch((err) => console.error(`Ошибка: ${err}`));\n}\n\n//удаление карты\nfunction handleDeleteForm(evt) {\n    evt.preventDefault();\n    deleteCardId(cardForDelete.cardId)\n        .then(() => {\n            deleteCard(cardForDelete.cardElement);\n            closeModal(confirmDeletePopUp);\n        })\n        .catch((err) => console.error(\"Ошибка:\", err));\n}\n\n//zoom image\n\nfunction zoomImage(name, link) {\n    openModal(popUpImg);\n    imageCard.src = link;\n    imageCard.alt = name;\n    imageCaption.textContent = name;\n}\n\n// //модал удаление карточки\nfunction deleteModal(cardId, cardElement) {\n    cardForDelete.cardId = cardId;\n    cardForDelete.cardElement = cardElement;\n\n    openModal(confirmDeletePopUp);\n\n    confirmDeleteForm.elements[\"delete-button\"].focus();\n}\n\n//листнеры\n// buttonAddCard.addEventListener('click', () => openModal(cardContent));\nprofileForm.addEventListener(\"submit\", handleEditProfile);\n\nbuttonAddCard.addEventListener(\"click\", () => {\n    placeName.value = \"\";\n    placeUrl.value = \"\";\n    openModal(cardContent);\n    clearValidation(newPlaseForm, validationConfig);\n\n    placeName.focus();\n});\n\nnewPlaseForm.addEventListener(\"submit\", newCardSubmit);\n\nconfirmDeleteForm.addEventListener(\"submit\", handleDeleteForm);\n\npopUpClose.addEventListener(\"click\", () => closeModal(profilePopUp));\nprofileActive.addEventListener(\"click\", function () {\n    openModal(profilePopUp);\n    inputEditProfile();\n    clearValidation(profileForm, validationConfig);\n});\n\nprofileEditAvatarForm.addEventListener(\"submit\", handleAvatarFormSubmit);\n\n//анимация\npopUpList.forEach(function (element) {\n    element.classList.add(\"popup_is-animated\");\n});\n\n//закрытие всех окон\ndocument.querySelectorAll(\".popup__close\").forEach((button) => {\n    const buttonsPopup = button.closest(\".popup\");\n    button.addEventListener(\"click\", () => closeModal(buttonsPopup));\n});\n\ninitializePage(getUserCards, getUserProfile);\nenableValidation(validationConfig);\n"],"names":["createCard","cardData","toogleLikeCard","zoomImage","deleteModal","currentUserId","card","document","querySelector","content","cloneNode","cardImage","cardTitle","cardDeleteButton","cardLikeButton","cardLikesCounterElement","isLikedByCurrentUser","likes","some","_id","src","link","alt","name","textContent","length","addEventListener","isCardLiked","classList","contains","then","updatedCard","toggle","add","remove","catch","err","console","error","concat","owner","openModal","popUp","EscModal","closeOverlay","closeModal","element","removeEventListener","e","target","currentTarget","evt","key","toggleSubmitButton","inputs","submitButton","inactiveButtonClass","Array","from","inputElement","validity","valid","disabled","clearValidation","formElement","config","querySelectorAll","inputSelector","submitButtonSelector","forEach","errorItem","id","setCustomValidity","hideError","inputErrorClass","errorClass","setting","url","headers","authorization","responseAuthorization","res","ok","json","Promise","reject","status","cardId","likeStatus","variableMethod","fetch","method","placesList","profilePopUp","profileActive","popUpClose","profileForm","forms","nameInput","jobInput","profileName","profileDescription","profileImage","profileEditAvatarForm","profileEditAvatarInput","profileEditAvatarPopUp","buttonAddCard","cardContent","popUpImg","imageCard","imageCaption","popUpList","confirmDeleteForm","confirmDeletePopUp","newPlaseForm","placeName","placeUrl","validationConfig","formSelector","cardForDelete","cardElement","elements","focus","reset","newProfile","preventDefault","value","about","body","JSON","stringify","newCardData","prepend","newAvatarLoad","avatar","linkType","get","startsWith","Error","editProfileImage","profileData","style","backgroundImage","button","buttonsPopup","closest","all","_ref","_ref2","cards","userData","append","customErrorMessage","dataset","errorMessage","patternMismatch","validationMessage","showError","isInputValid"],"sourceRoot":""}